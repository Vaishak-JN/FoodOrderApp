{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vaish\\\\Documents\\\\Coding\\\\Projects\\\\Udemy\\\\FoodOrderApp\\\\src\\\\Components\\\\Cart\\\\Checkout.js\",\n  _s = $RefreshSig$();\nimport classes from \"./Checkout.module.css\";\nimport { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isEmpty = val => val.trim() === \"\";\nconst isFiveChars = val => val.trim().length === 5;\nconst Checkout = _ref => {\n  _s();\n  let {\n    onCancel,\n    onConfirm\n  } = _ref;\n  const [formInputsValidity, setFormInutsValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    pin: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const pinInputRef = useRef();\n  const cityInputRef = useRef();\n  const confirmHandler = e => {\n    e.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPin = pinInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPinIsValid = isFiveChars(enteredPin);\n    setFormInutsValidity({\n      name: enteredNameIsValid,\n      city: enteredCityIsValid,\n      pin: enteredPinIsValid,\n      street: enteredStreetIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredCityIsValid && enteredPinIsValid && enteredStreetIsValid;\n    if (!formIsValid) {\n      return;\n    }\n    onConfirm({\n      enteredName,\n      enteredStreet,\n      enteredPin,\n      enteredCity\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputsValidity.name ? \"\" : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 46\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputsValidity.street ? \"\" : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), !formInputsValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid street!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 48\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputsValidity.pin ? \"\" : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"pincode\",\n        children: \"Pincode Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"pincode\",\n        ref: pinInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), !formInputsValidity.pin && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid pincode!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 45\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputsValidity.city ? \"\" : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), !formInputsValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid city!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 46\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(Checkout, \"4SrJoQpsKsfVOQXOnOCFoYbNwIM=\");\n_c = Checkout;\nexport default Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["classes","useRef","useState","isEmpty","val","trim","isFiveChars","length","Checkout","onCancel","onConfirm","formInputsValidity","setFormInutsValidity","name","street","city","pin","nameInputRef","streetInputRef","pinInputRef","cityInputRef","confirmHandler","e","preventDefault","enteredName","current","value","enteredStreet","enteredPin","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPinIsValid","formIsValid","form","control","invalid","actions","submit"],"sources":["C:/Users/vaish/Documents/Coding/Projects/Udemy/FoodOrderApp/src/Components/Cart/Checkout.js"],"sourcesContent":["import classes from \"./Checkout.module.css\"\r\nimport { useRef, useState } from \"react\"\r\n\r\nconst isEmpty = val => val.trim() === \"\"\r\nconst isFiveChars = val => val.trim().length === 5\r\n\r\nconst Checkout = ({ onCancel, onConfirm }) => {\r\n\r\n    const [formInputsValidity, setFormInutsValidity] = useState({\r\n        name: true,\r\n        street: true,\r\n        city: true,\r\n        pin: true\r\n    })\r\n\r\n    const nameInputRef = useRef()\r\n    const streetInputRef = useRef()\r\n    const pinInputRef = useRef()\r\n    const cityInputRef = useRef()\r\n\r\n    const confirmHandler = (e) => {\r\n        e.preventDefault()\r\n        const enteredName = nameInputRef.current.value\r\n        const enteredStreet = streetInputRef.current.value\r\n        const enteredPin = pinInputRef.current.value\r\n        const enteredCity = cityInputRef.current.value\r\n\r\n        const enteredNameIsValid = !isEmpty(enteredName)\r\n        const enteredStreetIsValid = !isEmpty(enteredStreet)\r\n        const enteredCityIsValid = !isEmpty(enteredCity)\r\n        const enteredPinIsValid = isFiveChars(enteredPin)\r\n\r\n        setFormInutsValidity({\r\n            name: enteredNameIsValid,\r\n            city: enteredCityIsValid,\r\n            pin: enteredPinIsValid,\r\n            street: enteredStreetIsValid\r\n        })\r\n\r\n        const formIsValid = enteredNameIsValid && enteredCityIsValid && enteredPinIsValid && enteredStreetIsValid\r\n\r\n\r\n        if (!formIsValid) {\r\n            return\r\n        }\r\n\r\n        onConfirm({\r\n            enteredName,\r\n            enteredStreet,\r\n            enteredPin,\r\n            enteredCity\r\n        })\r\n    }\r\n    return (\r\n        <form className={classes.form} onSubmit={confirmHandler}>\r\n            <div className={`${classes.control} ${formInputsValidity.name ? \"\" : classes.invalid}`}>\r\n                <label htmlFor='name'>Your Name</label>\r\n                <input type='text' id='name' ref={nameInputRef} />\r\n                {!formInputsValidity.name && <p>Please enter a valid name!</p>}\r\n            </div>\r\n            <div className={`${classes.control} ${formInputsValidity.street ? \"\" : classes.invalid}`}>\r\n                <label htmlFor='street'>Street</label>\r\n                <input type='text' id='street' ref={streetInputRef} />\r\n                {!formInputsValidity.street && <p>Please enter a valid street!</p>}\r\n            </div>\r\n            <div className={`${classes.control} ${formInputsValidity.pin ? \"\" : classes.invalid}`}>\r\n                <label htmlFor='pincode'>Pincode Code</label>\r\n                <input type='text' id='pincode' ref={pinInputRef} />\r\n                {!formInputsValidity.pin && <p>Please enter a valid pincode!</p>}\r\n            </div>\r\n            <div className={`${classes.control} ${formInputsValidity.city ? \"\" : classes.invalid}`}>\r\n                <label htmlFor='city'>City</label>\r\n                <input type='text' id='city' ref={cityInputRef} />\r\n                {!formInputsValidity.city && <p>Please enter a valid city!</p>}\r\n            </div>\r\n            <div className={classes.actions}>\r\n                <button type='button' onClick={onCancel}>\r\n                    Cancel\r\n                </button>\r\n                <button className={classes.submit}>Confirm</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Checkout"],"mappings":"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"},"metadata":{},"sourceType":"module"}